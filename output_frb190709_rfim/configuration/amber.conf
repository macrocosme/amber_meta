# AMBER setup for subband dedispersion
# platform (usually only one installed)
opencl_platform=0
# Central frequencies for which config exists
valid_freqs=[1280, 1370, 1400]
# number of GPU to use
# this is used by the controller to determine the number of AMBER isntances to run
opencl_device=[1, 2, 3]
# name of device in config files
#device_name=['ARTS_step1_81.92us_1370MHz', 'ARTS_step2_81.92us_1370MHz', 'ARTS_step3_nodownsamp_81.92us_1370MHz']
#device_name=['ARTS_step1_81.92us_1280MHz', 'ARTS_step2_81.92us_1280MHz', 'ARTS_step3_nodownsamp_81.92us_1280MHz']
device_name=['ARTS_step1_81.92us_{freq}MHz', 'ARTS_step2_81.92us_{freq}MHz', 'ARTS_step3_nodownsamp_81.92us_{freq}MHz']
# nr of subands (approx sqrt(nchan))
subbands=[32, 32, 32]
# first DM (global)
subbanding_dm_first=[0, 409.6, 819.2]
# DM step size outside of subband
subbanding_dm_step=[6.4, 6.4, 40.0]
# number of DMs (outside of subbands)
subbanding_dms=[64, 64, 64]
# first DM within a subband step
dm_first=[0, 0, 0]
# DM step size with a subband step
dm_step=[.2, .2, 2.5]
# total nr of DM within a subband step (approx nr of subbands, 
# if following DDplan.py)
num_dm=[32, 32, 16]
# downsampling factors before dedispersion
downsamp=[1, 1, 1]
# S/N algorithm to use
snr_mode=SNR_SC
# sigma for clipping in SNR_SC algorithm
snr_nsigma=3.00
# integration steps to use for each step
integration_file=['integration_steps_x1.conf', 'integration_steps_x1.conf', 'integration_steps_x1.conf']
# RFIm time domain sigma cut
rfim_tdsc=True
# RFIm freq domain sigma cut
rfim_fdsc=False
# Number of bins to average for fdsc
fdsc_nbins=4
# Number of synthesized beams to process per chunk
nsynbeams_chunk=4
# Any extra settings
extra_flags=-compact_results -synthesized_beams_file /home/arts/.controller/synthesized_beam_tables/sbtable-sc4-12tabs-71sbs.txt
